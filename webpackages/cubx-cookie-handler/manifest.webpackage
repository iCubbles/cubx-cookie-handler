{
  "name": "cubx-cookie-handler",
  "groupId": "",
  "version": "1.0.0",
  "modelVersion": "9.1.1",
  "docType": "webpackage",
  "author": {
    "name": "Edwin Gamboa",
    "email": "edwingamboa355@gmail.com"
  },
  "license": "MIT",
  "keywords": [],
  "man": [],
  "artifacts": {
    "apps": [
      {
        "artifactId": "docs",
        "description": "Generated webpackage documentation.",
        "runnables": [
          {
            "name": "docs",
            "path": "/index.html",
            "description": "Show the interface of this component."
          }
        ]
      }
    ],
    "elementaryComponents": [
      {
        "artifactId": "cubx-cookie-writer",
        "description": "This component allows writing cookies in client-side",
        "runnables": [
          {
            "name": "demo",
            "path": "/demo/index.html",
            "description": "Demo app..."
          },
          {
            "name": "docs",
            "path": "/docs/index.html",
            "description": "Show the interface of this component."
          }
        ],
        "resources": [
          "cubx-cookie-writer.html"
        ],
        "dependencies": [
          {
            "webpackageId": "cubx.core.rte@2.4.0",
            "artifactId": "cubxpolymer"
          }
        ],
        "slots": [
          {
            "slotId": "cookie",
            "type": "object",
            "description": "Slot to set a cookie using an object -> { \"key\": \"cookieKey\", \"value\": \"cookieValue\", \"expires\":  \"expirationDate\"}.",
            "direction": [
              "input"
            ]
          }
        ]
      },
      {
        "artifactId": "cubx-cookie-reader",
        "description": "This component allows reading cookies in client-side",
        "runnables": [
          {
            "name": "demo",
            "path": "/demo/index.html",
            "description": "Demo app..."
          },
          {
            "name": "docs",
            "path": "/docs/index.html",
            "description": "Show the interface of this component."
          }
        ],
        "resources": [
          "cubx-cookie-reader.html"
        ],
        "dependencies": [
          {
            "webpackageId": "cubx.core.rte@2.4.0",
            "artifactId": "cubxpolymer"
          }
        ],
        "slots": [
          {
            "slotId": "cookieKey",
            "type": "string",
            "description": "Key of the cookie to be read",
            "direction": [
              "input"
            ]
          },
          {
            "slotId": "readCookie",
            "type": "object",
            "description": "Read cookie -> { \"key\": \"cookieKey\", \"value\": \"cookieValue\" } or undefined if not found",
            "direction": [
              "output"
            ]
          },
          {
            "slotId": "readAllCookies",
            "type": "boolean",
            "description": "Update the 'allCookies' slot when true",
            "direction": [
              "input"
            ]
          },
          {
            "slotId": "allCookies",
            "type": "array",
            "description": "Slot containing all cookies -> [{\"key\": \"cookieKey\", \"value\": \"cookieValue\"}, ...]",
            "direction": [
              "output"
            ]
          }
        ]
      },
      {
        "artifactId": "cubx-cookie-deleter",
        "description": "Component to delete cookies in client-side",
        "runnables": [
          {
            "name": "demo",
            "path": "/demo/index.html",
            "description": "Demo app..."
          },
          {
            "name": "docs",
            "path": "/docs/index.html",
            "description": "Show the interface of this component."
          }
        ],
        "resources": [
          "cubx-cookie-deleter.html"
        ],
        "dependencies": [
          {
            "webpackageId": "cubx.core.rte@2.4.0",
            "artifactId": "cubxpolymer"
          }
        ],
        "slots": [
          {
            "slotId": "cookieKey",
            "type": "string",
            "description": "Key of the cookie to be deleted",
            "direction": [
              "input"
            ]
          }
        ]
      }
    ],
    "compoundComponents": [
      {
        "artifactId": "cubx-cookie-handler",
        "description": "Compound component to manage cookies",
        "runnables": [
          {
            "name": "demo",
            "path": "/demo/index.html",
            "description": "Demo app..."
          },
          {
            "name": "docs",
            "path": "/docs/index.html",
            "description": "Show the interface and dataflow of this component."
          }
        ],
        "resources": [
          "css/cubx-cookie-handler.css"
        ],
        "dependencies": [
          {
            "artifactId": "cubx-cookie-writer"
          },
          {
            "artifactId": "cubx-cookie-reader"
          },
          {
            "artifactId": "cubx-cookie-deleter"
          }
        ],
        "slots": [
          {
            "slotId": "cookieToWrite",
            "type": "object",
            "description": "Slot to set a cookie using an object -> { \"key\": \"cookieKey\", \"value\": \"cookieValue\", \"expires\":  \"expirationDate\"}.",
            "direction": [
              "input"
            ]
          },
          {
            "slotId": "cookieKeyToRead",
            "type": "string",
            "description": "Key of the cookie to be read",
            "direction": [
              "input"
            ]
          },
          {
            "slotId": "readCookie",
            "type": "object",
            "description": "Read cookie -> { \"key\": \"cookieKey\", \"value\": \"cookieValue\" } or undefined if not found",
            "direction": [
              "output"
            ]
          },
          {
            "slotId": "readAllCookies",
            "type": "boolean",
            "description": "Update the 'allCookies' slot when true",
            "direction": [
              "input"
            ]
          },
          {
            "slotId": "allCookies",
            "type": "array",
            "description": "Slot containing all cookies from document.cookie -> [{\"key\": \"cookieKey\", \"value\": \"cookieValue\"}, ...]",
            "direction": [
              "output"
            ]
          },
          {
            "slotId": "cookieKeyToDelete",
            "type": "string",
            "description": "Key of the cookie to be deleted",
            "direction": [
              "input"
            ]
          }
        ],
        "members": [
          {
            "memberId": "cookieWriter",
            "artifactId": "cubx-cookie-writer"
          },
          {
            "memberId": "cookieReader",
            "artifactId": "cubx-cookie-reader"
          },
          {
            "memberId": "cookieDeleter",
            "artifactId": "cubx-cookie-deleter"
          }
        ],
        "connections": [
          {
            "connectionId": "cookieToWriteCon",
            "source": {
              "slot": "cookieToWrite"
            },
            "destination": {
              "memberIdRef": "cookieWriter",
              "slot": "cookie"
            }
          },
          {
            "connectionId": "cookieToReadCon",
            "source": {
              "slot": "cookieKeyToRead"
            },
            "destination": {
              "memberIdRef": "cookieReader",
              "slot": "cookieKey"
            }
          },
          {
            "connectionId": "readCookieCon",
            "source": {
              "memberIdRef": "cookieReader",
              "slot": "readCookie"
            },
            "destination": {
              "slot": "readCookie"
            }
          },
          {
            "connectionId": "readAllCookiesCon",
            "source": {
              "slot": "readAllCookies"
            },
            "destination": {
              "memberIdRef": "cookieReader",
              "slot": "readAllCookies"
            },
            "repeatedValues": true
          },
          {
            "connectionId": "allCookiesCon",
            "source": {
              "memberIdRef": "cookieReader",
              "slot": "allCookies"
            },
            "destination": {
              "slot": "allCookies"
            }
          },
          {
            "connectionId": "cookieKeyToDeleteCon",
            "source": {
              "slot": "cookieKeyToDelete"
            },
            "destination": {
              "memberIdRef": "cookieDeleter",
              "slot": "cookieKey"
            }
          }
        ],
        "inits": []
      }
    ],
    "utilities": []
  }
}